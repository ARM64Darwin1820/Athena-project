# netcdf.rb
# https://github.com/Homebrew/homebrew-core/blob/master/Formula/netcdf.rb
# Converted on 02-01-2019

name='netcdf'
url=('https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-4.6.2.tar.gz')
description='Libraries and data formats for array-oriented scientific data'
version='4.6.2' # Guessed version.
priority='optional'
homepage='https://www.unidata.ucar.edu/software/netcdf'
depends=('gcc' 'hdf5')
makedepends=('cmake')

###### Resource ######
# cxx: https://github.com/Unidata/netcdf-cxx4/archive/v4.3.0.tar.gz
# cxx-compat: https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx-4.2.tar.gz
# fortran: https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.4.4.tar.gz

###### Install ######
# ENV.deparallelize
# common_args = std_cmake_args << "-DBUILD_TESTING=OFF"
# mkdir "build" do
# args = common_args.dup
# args << "-DENABLE_TESTS=OFF"
# args << "-DNC_EXTRA_DEPS=-lmpi" if Tab.for_name("hdf5").with? "mpi"
# args << "-DENABLE_DAP_AUTH_TESTS=OFF" << "-DENABLE_NETCDF_4=ON" << "-DENABLE_DOXYGEN=OFF"
# system "cmake", "..", "-DBUILD_SHARED_LIBS=ON", *args
# system "make", "install"
# system "make", "clean"
# system "cmake", "..", "-DBUILD_SHARED_LIBS=OFF", *args
# system "make"
# lib.install "liblib/libnetcdf.a"
# end
# args = common_args.dup << "-DNETCDF_C_LIBRARY=#{lib}"
# cxx_args = args.dup
# cxx_args << "-DNCXX_ENABLE_TESTS=OFF"
# resource("cxx").stage do
# mkdir "build-cxx" do
# system "cmake", "..", "-DBUILD_SHARED_LIBS=ON", *cxx_args
# system "make", "install"
# system "make", "clean"
# system "cmake", "..", "-DBUILD_SHARED_LIBS=OFF", *cxx_args
# system "make"
# lib.install "cxx4/libnetcdf-cxx4.a"
# end
# end
# fortran_args = args.dup
# fortran_args << "-DENABLE_TESTS=OFF"
# resource("fortran").stage do
# mkdir "build-fortran" do
# system "cmake", "..", "-DBUILD_SHARED_LIBS=ON", *fortran_args
# system "make", "install"
# system "make", "clean"
# system "cmake", "..", "-DBUILD_SHARED_LIBS=OFF", *fortran_args
# system "make"
# lib.install "fortran/libnetcdff.a"
# end
# end
# ENV.prepend "CPPFLAGS", "-I#{include}"
# ENV.prepend "LDFLAGS", "-L#{lib}"
# resource("cxx-compat").stage do
# system "./configure", "--disable-dependency-tracking",
# "--enable-shared",
# "--enable-static",
# "--prefix=#{prefix}"
# system "make"
# system "make", "install"
# end
# libnetcdf = (lib/"libnetcdf.dylib").readlink
# %w[libnetcdf-cxx4.dylib libnetcdf_c++.dylib].each do |f|
# macho = MachO.open("#{lib}/#{f}")
# macho.change_dylib("@rpath/#{libnetcdf}",
# "#{lib}/#{libnetcdf}")
# macho.write!
# end
