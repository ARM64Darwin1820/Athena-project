# gdal.rb
# https://github.com/Homebrew/homebrew-core/blob/master/Formula/gdal.rb
# Converted on 02-01-2019

name='gdal'
url=('https://download.osgeo.org/gdal/2.4.0/gdal-2.4.0.tar.xz')
description='Geospatial Data Abstraction Library'
version='2.4.0' # Guessed version.
priority='optional'
homepage='https://www.gdal.org/'
depends=('cfitsio' 'epsilon' 'expat' 'freexl' 'geos' 'giflib' 'hdf5' 'jasper' 'jpeg' 'json-c' 'libdap' 'libgeotiff' 'libpng' 'libpq' 'libspatialite' 'libtiff' 'libxml2' 'netcdf' 'numpy' 'pcre' 'podofo' 'poppler' 'proj' 'python' 'python@2' 'sqlite' 'unixodbc' 'webp' 'xerces-c' 'xz' 'zstd')

###### Install ######
# args = [
# "--prefix=#{prefix}",
# "--mandir=#{man}",
# "--disable-debug",
# "--with-libtool",
# "--with-local=#{prefix}",
# "--with-opencl",
# "--with-threads",
# "--with-bsb",
# "--with-grib",
# "--with-pam",
# "--with-pcidsk=internal",
# "--with-pcraster=internal",
# "--with-curl=/usr/bin/curl-config",
# "--with-expat=#{Formula["expat"].prefix}",
# "--with-freexl=#{Formula["freexl"].opt_prefix}",
# "--with-geos=#{Formula["geos"].opt_prefix}/bin/geos-config",
# "--with-geotiff=#{Formula["libgeotiff"].opt_prefix}",
# "--with-gif=#{Formula["giflib"].opt_prefix}",
# "--with-jpeg=#{Formula["jpeg"].opt_prefix}",
# "--with-libjson-c=#{Formula["json-c"].opt_prefix}",
# "--with-libtiff=#{Formula["libtiff"].opt_prefix}",
# "--with-pg=#{Formula["libpq"].opt_prefix}/bin/pg_config",
# "--with-png=#{Formula["libpng"].opt_prefix}",
# "--with-spatialite=#{Formula["libspatialite"].opt_prefix}",
# "--with-sqlite3=#{Formula["sqlite"].opt_prefix}",
# "--with-static-proj4=#{Formula["proj"].opt_prefix}",
# "--with-zstd=#{Formula["zstd"].opt_prefix}",
# "--with-liblzma=yes",
# "--with-cfitsio=/usr/local",
# "--with-hdf5=/usr/local",
# "--with-netcdf=/usr/local",
# "--with-jasper=/usr/local",
# "--with-xerces=/usr/local",
# "--with-odbc=/usr/local",
# "--with-dods-root=/usr/local",
# "--with-epsilon=/usr/local",
# "--with-webp=/usr/local",
# "--with-podofo=/usr/local",
# "--with-armadillo=no",
# "--with-qhull=no",
# "--without-grass",
# "--without-jpeg12",
# "--without-libgrass",
# "--without-mysql",
# "--without-perl",
# "--without-php",
# "--without-python",
# "--without-ruby",
# "--without-gta",
# "--without-ogdi",
# "--without-fme",
# "--without-hdf4",
# "--without-openjpeg",
# "--without-fgdb",
# "--without-ecw",
# "--without-kakadu",
# "--without-mrsid",
# "--without-jp2mrsid",
# "--without-mrsid_lidar",
# "--without-msg",
# "--without-oci",
# "--without-ingres",
# "--without-dwgdirect",
# "--without-idb",
# "--without-sde",
# "--without-podofo",
# "--without-rasdaman",
# "--without-sosi",
# ]
# if DevelopmentTools.clang_build_version >= 900
# ENV.delete "SDKROOT"
# ENV.delete "HOMEBREW_SDKROOT"
# end
# system "./configure", *args
# system "make"
# system "make", "install"
# if build.stable?
# cd "swig/python" do
# system "python3", *Language::Python.setup_install_args(prefix)
# system "python2", *Language::Python.setup_install_args(prefix)
# end
# bin.install Dir["swig/python/scripts/*.py"]
# end
# system "make", "man" if build.head?
# system "make", "install-man", "INST_MAN=#{man}"
# Dir.glob("#{bin}/*.dox") { |p| rm p }
