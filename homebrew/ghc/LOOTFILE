# ghc.rb
# https://github.com/Homebrew/homebrew-core/blob/master/Formula/ghc.rb
# Converted on 02-02-2019

name='ghc'
url=('https://downloads.haskell.org/~ghc/8.4.4/ghc-8.4.4-src.tar.xz')
description='Glorious Glasgow Haskell Compilation System'
version='8.4.4' # Guessed version.
priority='optional'
homepage='https://haskell.org/ghc/'
makedepends=('python' 'sphinx-doc')

# A diff file was written to ghc.diff
# --> Patch the file before building.

###### Resource ######
# gmp: https://ftp.gnu.org/gnu/gmp/gmp-6.1.2.tar.xz
# binary: https://downloads.haskell.org/~ghc/8.4.4/ghc-8.4.4-x86_64-apple-darwin.tar.xz
# testsuite: https://downloads.haskell.org/~ghc/8.4.4/ghc-8.4.4-testsuite.tar.xz

###### Install ######
# ENV["CC"] = ENV.cc
# ENV["LD"] = "ld"
# gmp = libexec/"integer-gmp"
# resource("gmp").stage do
# system "./configure", "--prefix=#{gmp}", "--with-pic", "--disable-shared",
# "--build=#{Hardware.oldest_cpu}-apple-darwin#{`uname -r`.to_i}"
# system "make"
# system "make", "check"
# ENV.deparallelize { system "make", "install" }
# end
# args = ["--with-gmp-includes=#{gmp}/include",
# "--with-gmp-libraries=#{gmp}/lib"]
# if DevelopmentTools.clang_build_version >= 703 && DevelopmentTools.clang_build_version < 800
# args << "--with-nm=#{`xcrun --find nm-classic`.chomp}"
# end
# resource("binary").stage do
# binary = buildpath/"binary"
# system "./configure", "--prefix=#{binary}", *args
# ENV.deparallelize { system "make", "install" }
# ENV.prepend_path "PATH", binary/"bin"
# end
# if build.head?
# resource("cabal").stage do
# system "sh", "bootstrap.sh", "--sandbox"
# (buildpath/"bootstrap-tools/bin").install ".cabal-sandbox/bin/cabal"
# end
# ENV.prepend_path "PATH", buildpath/"bootstrap-tools/bin"
# cabal_sandbox do
# cabal_install "--only-dependencies", "happy", "alex"
# cabal_install "--prefix=#{buildpath}/bootstrap-tools", "happy", "alex"
# end
# system "./boot"
# end
# system "./configure", "--prefix=#{prefix}", *args
# system "make"
# resource("testsuite").stage { buildpath.install Dir["*"] }
# cd "testsuite" do
# system "make", "clean"
# system "make", "CLEANUP=1", "THREADS=#{ENV.make_jobs}", "fast"
# end
# ENV.deparallelize { system "make", "install" }
# Dir.glob(lib/"*/package.conf.d/package.cache") { |f| rm f }
# system "#{bin}/ghc-pkg", "recache"
