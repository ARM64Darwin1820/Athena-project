.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLDELTA 1"
.TH PERLDELTA 1 "2019-02-20" "perl v5.29.8" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perldelta \- what is new for perl v5.29.8
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.29.7 release and the 5.29.8
release.
.PP
If you are upgrading from an earlier release such as 5.29.6, first read
perl5297delta, which describes differences between 5.29.6 and 5.29.7.
.SH "Notice"
.IX Header "Notice"
sv_utf8_(downgrade|decode) are no longer marked as experimental [perl #133788]
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.SS "Use faster method to convert to \s-1UTF\-8\s0"
.IX Subsection "Use faster method to convert to UTF-8"
There is a special inline function that's used when converting a single
byte to \s-1UTF\-8,\s0 that is faster than the more general one used prior to
this commit.
.SS "Turkic \s-1UTF\-8\s0 locales are now seamlessly supported"
.IX Subsection "Turkic UTF-8 locales are now seamlessly supported"
Turkic languages have different casing rules than other languages for
the characters \f(CW"i"\fR and \f(CW"I"\fR.  The uppercase of \f(CW"i"\fR is \s-1LATIN
CAPITAL LETTER I WITH DOT ABOVE\s0 (U+0130); and the lowercase of \f(CW"I"\fR is \s-1LATIN
SMALL LETTER DOTLESS I\s0 (U+0131).  Unicode furnishes alternate casing
rules for use with Turkic languages.  Previously, Perl ignored these,
but now, it uses them when it detects that it is operating under a
Turkic \s-1UTF\-8\s0 locale.
.SS "Eliminate opASSIGN macro usage from core"
.IX Subsection "Eliminate opASSIGN macro usage from core"
This macro is still defined but no longer used in core
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
.SS "\s-1JSON::PP\s0 enable allow_nonref by default"
.IX Subsection "JSON::PP enable allow_nonref by default"
As \s-1JSON::XS 4.0\s0 changed its policy and enabled allow_nonref
by default, \s-1JSON::PP\s0 also enabled allow_nonref by default.
.SH "Performance Enhancements"
.IX Header "Performance Enhancements"
.RS 4
Eliminate recursion from \fBfinalize_op()\fR [perl #108276]
.RE
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "\(bu" 4
B has been upgraded from version 1.75 to 1.76.
.IP "\(bu" 4
deprecate has been upgraded from version 0.03 to 0.04.
.IP "\(bu" 4
Devel::PPPort has been upgraded from version 3.43 to 3.44.
.IP "\(bu" 4
Encode has been upgraded from version 2.97 to 3.00.
.IP "\(bu" 4
ExtUtils::Miniperl has been upgraded from version 1.08 to 1.09.
.IP "\(bu" 4
\&\s-1IO\s0 has been upgraded from version 1.39 to 1.40.
.IP "\(bu" 4
\&\s-1JSON::PP\s0 has been upgraded from version 2.97001 to 4.00.
\&\s-1JSON::PP\s0 as \s-1JSON::XS 4.0\s0 enable allow_nonref by default
.IP "\(bu" 4
Module::CoreList has been upgraded from version 5.20190120 to 5.20190220.
.Sp
Changes to B::Op_private and Config
.IP "\(bu" 4
Module::Load has been upgraded from version 0.32 to 0.34.
.IP "\(bu" 4
Net::Ping has been upgraded from version 2.62 to 2.71.
.IP "\(bu" 4
perlfaq has been upgraded from version 5.20180915 to 5.20190126.
.IP "\(bu" 4
\&\s-1POSIX\s0 has been upgraded from version 1.86 to 1.87.
.IP "\(bu" 4
Test::Simple has been upgraded from version 1.302160 to 1.302162.
.IP "\(bu" 4
XS::APItest has been upgraded from version 0.99 to 1.00.
.SH "Documentation"
.IX Header "Documentation"
.SS "Changes to Existing Documentation"
.IX Subsection "Changes to Existing Documentation"
We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to perlbug@perl.org <mailto:perlbug@perl.org>.
.PP
Additionally, the following selected changes have been made:
.PP
\fIperlfunc\fR
.IX Subsection "perlfunc"
.IP "\(bu" 4
Try to clarify that \f(CW\*(C`ref(qr/xx/)\*(C'\fR returns \f(CW\*(C`Regexp\*(C'\fR rather than
\&\f(CW\*(C`REGEXP\*(C'\fR and why.  [perl #133751]
.PP
\fIperllocale\fR
.IX Subsection "perllocale"
.IP "\(bu" 4
There are actually two slightly different types of \s-1UTF\-8\s0 locales: one for Turkic
languages and one for everything else. Starting in Perl v5.30, Perl seamlessly 
handles both types.
.PP
\fIperlrecharclass\fR
.IX Subsection "perlrecharclass"
.IP "\(bu" 4
Added a note for the ::xdigit:: character class.
.SH "Diagnostics"
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see perldiag.
.SS "Changes to Existing Diagnostics"
.IX Subsection "Changes to Existing Diagnostics"
.IP "\(bu" 4
Type of arg \f(CW%d\fR to \f(CW%s\fR must be \f(CW%s\fR (not \f(CW%s\fR)
.Sp
Attempts to push, pop, etc on a hash or glob now produce this message
rather than complaining that they no longer work on scalars. [perl
#130367]
.SH "Configuration and Compilation"
.IX Header "Configuration and Compilation"
.IP "\(bu" 4
Improve detection of memrchr, strlcat, and strlcpy
.IP "\(bu" 4
Improve Configure detection of \fBmemmem()\fR [perl #133760].
.IP "\(bu" 4
Fix \-DPERL_GLOBAL_STRUCT_PRIVATE build option.
.IP "\(bu" 4
Multiple improvements and fixes for \-DPERL_GLOBAL_STRUCT build option.
.SH "Testing"
.IX Header "Testing"
Tests were added and changed to reflect the other additions and
changes in this release.  Furthermore, these significant changes were
made:
.IP "\(bu" 4
t/lib/croak/op [perl #130367]
.Sp
separate error for push etc on hash/glob
.IP "\(bu" 4
t/op/svleak.t [perl #133660]
.Sp
add test for goto &sub in overload leaking
.IP "\(bu" 4
Split t/re/fold_grind.t into multiple test files
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "Windows" 4
.IX Item "Windows"
\&\fBsocket()\fR now sets \f(CW$!\fR if the protocol, address family and socket
type combination is not found.  [perl #133853]
.SH "Internal Changes"
.IX Header "Internal Changes"
.IP "\(bu" 4
It is now forbidden to malloc more than \f(CW\*(C`PTRDIFF_T_MAX\*(C'\fR bytes.  Much
code (including C optimizers) assumes that all data structures will not
be larger than this, so this catches such attempts before overflow
happens.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
Regular expression matching no longer leaves stale \s-1UTF\-8\s0 length magic
when updating \f(CW$^R\fR. This could result in \f(CW\*(C`length($^R)\*(C'\fR returning
an incorrect value.
.IP "\(bu" 4
Fix a qr/[...]/ bug introduced in v5.29.7
.Sp
Using /il should not result in looking for a [:posix:] class
that matches the code points given.
.IP "\(bu" 4
Reduce recursion on ops [perl #108276]
.Sp
This can prevent stack overflow when processing extremely deep op
trees.
.IP "\(bu" 4
Avoid leak in multiconcat with overloading. [perl #133789]
.IP "\(bu" 4
The handling of user-defined \f(CW\*(C`\ep{}\*(C'\fR properties (see
\&\*(L"User-Defined Character Properties\*(R" in perlunicode) has been rewritten to
be in C (instead of Perl).  This speeds things up, but in the process
several inconsistencies and bug fixes are made.
.RS 4
.IP "1." 4
A few error messages have minor wording changes.  This is essentially
because the new way is integrated into the regex error handling
mechanism that marks the position in the input at which the error
occurred.  That was not possible previously.  The messages now also
contain additional back-trace-like information in case the error occurs
deep in nested calls.
.IP "2." 4
A user-defined property is implemented as a perl subroutine with certain
highly constrained naming conventions.  It was documented previously
that the sub would be in the current package if the package was
unspecified.  This turned out not to be true in all cases, but now it
is.
.IP "3." 4
All recursive calls are treated as infinite recursion.  Previously they
would cause the interpreter to panic.  Now, they cause the regex pattern
to fail to compile.
.IP "4." 4
Similarly, any other error likely would lead to a panic; now to just the
pattern failing to compile.
.IP "5." 4
The old mechanism did not detect illegal ranges in the definition of the
property.  Now, the range max must not be smaller than the range min.
Otherwise, the pattern fails to compile.
.IP "6." 4
The intention was to have each sub called only once during the lifetime
of the program, so that a property's definition is immutable.  This was
relaxed so that it could be called once for all /i compilations, and
potentially a second time for non\-/i (the sub is passed a parameter
indicating which).  However, in practice there were instances when this
was broken, and multiple calls were possible.  Those have been fixed.
Now (besides the /i,non\-/i cases) the only way a sub can be called
multiple times is if some component of it has not been defined yet.  For
example, suppose we have sub \fBIsA()\fR whose definition is known at compile
time, and it in turn calls \fBisB()\fR whose definition is not yet known.
\&\fBisA()\fR will be called each time a pattern it appears in is compiled.  If
\&\fBisA()\fR also calls \fBisC()\fR and that definition is known, \fBisC()\fR will be
called just once.
.IP "7." 4
There were some races and very long hangs should one thread be compiling
the same property as another simultaneously.  These have now been fixed.
.RE
.RS 4
.RE
.IP "\(bu" 4
Assertion failure in compiling invalid regex pattern [perl #133767]
.Sp
This bug was introduced in the 5.29 series, so this should not be in the
perldelta for 5.30.
.IP "\(bu" 4
Null pointer deref [perl #133770]
.Sp
This bug was introduced in the 5.29 series, so this should not be in the
perldelta for 5.30.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.29.8 represents approximately 5 weeks of development since Perl
5.29.7 and contains approximately 13,000 lines of changes across 290 files
from 18 authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 9,500 lines of changes to 210 .pm, .t, .c and .h files.
.PP
Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.29.8:
.PP
Abigail, Andreas KA\*~Xnig, Andy Dougherty, Aristotle Pagaltzis, Chris 'BinGOs'
Williams, Dagfinn Ilmari MannsA\*~Xker, Dan Kogai, David Mitchell, Jakub Wilk,
James E Keenan, Karen Etheridge, Karl Williamson, Nicolas R., Pali, Sawyer
X, Shlomi Fish, Tomasz Konojacki, Tony Cook.
.PP
The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of the (very much appreciated) contributors who reported issues to
the Perl bug tracker.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0 modules
included in Perl's core. We're grateful to the entire \s-1CPAN\s0 community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl's historical contributors, please
see the \fI\s-1AUTHORS\s0\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the perl bug database
at <https://rt.perl.org/>.  There may also be information at
<http://www.perl.org/>, the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the perlbug program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to perlbug@perl.org to be analyzed by the Perl porting team.
.PP
If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
\&\*(L"\s-1SECURITY VULNERABILITY CONTACT INFORMATION\*(R"\s0 in perlsec
for details of how to report the issue.
.SH "Give Thanks"
.IX Header "Give Thanks"
If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the \f(CW\*(C`perlthanks\*(C'\fR program:
.PP
.Vb 1
\&    perlthanks
.Ve
.PP
This will send an email to the Perl 5 Porters list with your show of thanks.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 1:" 4
.IX Item "Around line 1:"
This document probably does not appear as it should, because its \*(L"=encoding utf8\*(R" line calls for an unsupported encoding.  [Encode.pm v?'s supported encodings are: ]
.Sp
Couldn't do =encoding utf8: This document probably does not appear as it should, because its \*(L"=encoding utf8\*(R" line calls for an unsupported encoding.  [Encode.pm v?'s supported encodings are: ]
