.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5296DELTA 1"
.TH PERL5296DELTA 1 "2019-02-14" "perl v5.29.8" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5296delta \- what is new for perl v5.29.6
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.29.5 release and the 5.29.6
release.
.PP
If you are upgrading from an earlier release such as 5.29.4, first read
perl5295delta, which describes differences between 5.29.4 and 5.29.5.
.SH "Security"
.IX Header "Security"
.SS "[\s-1CVE\-2018\-18312\s0] Heap-buffer-overflow write in S_regatom (regcomp.c)"
.IX Subsection "[CVE-2018-18312] Heap-buffer-overflow write in S_regatom (regcomp.c)"
A crafted regular expression could cause heap-buffer-overflow write during
compilation, potentially allowing arbitrary code execution. (This was 
actually fixed in 5.29.4, but not announced as a security fix at the time).
[perl #133423] <https://rt.perl.org/Ticket/Display.html?id=133423>
.SH "Performance Enhancements"
.IX Header "Performance Enhancements"
.IP "\(bu" 4
Optimization of \f(CW\*(C`IV\*(C'\fR to \f(CW\*(C`UV\*(C'\fR conversions.
[perl #133677] <https://rt.perl.org/Ticket/Display.html?id=133677>.
.IP "\(bu" 4
Speed up of the integer stringification algorithm by processing
two digits at a time instead of one.
[perl #133691] <https://rt.perl.org/Ticket/Display.html?id=133691>.
.IP "\(bu" 4
Improvements based on \s-1LGTM\s0 analysis and recommendation.
(<https://lgtm.com/projects/g/Perl/perl5/alerts/?mode=tree>). 
[perl #133686] <https://rt.perl.org/Ticket/Display.html?id=133686>.
[perl #133699] <https://rt.perl.org/Ticket/Display.html?id=133699>.
.IP "\(bu" 4
Code optimizations in \fIregcomp.c\fR, \fIregcomp.h\fR, \fIregexec.c\fR.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "\(bu" 4
Config::Perl::V. has been upgraded from version 0.30 to 0.32. This was due
to a new configuration variable that has influence on binary compatibility:
\&\f(CW\*(C`USE_THREAD_SAFE_LOCALE\*(C'\fR.
.IP "\(bu" 4
ExtUtils::ParseXS has been upgraded from version 3.39 to 3.40.
\&\f(CW\*(C`OUTLIST\*(C'\fR parameters are no longer incorrectly included in the
automatically generated function prototype.
[perl #133654] <https://rt.perl.org/Ticket/Display.html?id=133654>.
.IP "\(bu" 4
File::Find has been upgraded from version 1.34 to 1.35.
\&\f(CW$File::Find::dont_use_nlink\fR now defaults to 1 on all
platforms.
[perl #133673] <https://rt.perl.org/Ticket/Display.html?id=133673>.
.IP "\(bu" 4
Module::CoreList has been upgraded from version 5.20181120 to 5.20181218.
.IP "\(bu" 4
\&\s-1POSIX\s0 has been upgraded from version 1.85 to 1.86.
.IP "\(bu" 4
Storable has been upgraded from version 3.13 to 3.14.
.Sp
Storable no longer probes for recursion limits at build time.
[perl #133708] <https://rt.perl.org/Ticket/Display.html?id=133708>
and others.
.Sp
Metasploit exploit code was included to test for \s-1CVE\-2015\-1992\s0
detection, this caused anti-virus detections on at least one \s-1AV\s0 suite.
The exploit code has been removed and replaced with a simple
functional test.
[perl #133706] <https://rt.perl.org/Ticket/Display.html?id=133706>
.IP "\(bu" 4
Test::Simple has been upgraded from version 1.302140 to 1.302141.
.IP "\(bu" 4
threads::shared has been upgraded from version 1.58 to 1.59.
.SH "Documentation"
.IX Header "Documentation"
.SS "Changes to Existing Documentation"
.IX Subsection "Changes to Existing Documentation"
We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to perlbug@perl.org <mailto:perlbug@perl.org>.
.PP
Additionally, the following selected changes have been made:
.PP
\fIperlfunc\fR
.IX Subsection "perlfunc"
.IP "\(bu" 4
Clarification of behaviour of \f(CW\*(C`reset EXPR\*(C'\fR.
.PP
\fIperlreref\fR
.IX Subsection "perlreref"
.IP "\(bu" 4
Clarification of the syntax of /(?(cond)yes)/.
.PP
\fIperlop\fR
.IX Subsection "perlop"
.IP "\(bu" 4
We no longer have null (empty line) here doc terminators, so 
perlop should not refer to them.
.SH "Diagnostics"
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see perldiag.
.SS "Changes to Existing Diagnostics"
.IX Subsection "Changes to Existing Diagnostics"
.IP "\(bu" 4
Under \f(CW\*(C`\-Dr\*(C'\fR (or \f(CW\*(C`use re \*(AqDebug\*(Aq\*(C'\fR) the compiled regex engine
program is displayed. It used two different spellings for \fIinfinity\fR,
\&\f(CW\*(C`INFINITY\*(C'\fR, and \f(CW\*(C`INFTY\*(C'\fR. It now uses the latter exclusively,
as that spelling has been around the longest.
.SH "Utility Changes"
.IX Header "Utility Changes"
.SS "xsubpp"
.IX Subsection "xsubpp"
.IP "\(bu" 4
The generated prototype (with \f(CW\*(C`PROTOTYPES: ENABLE\*(C'\fR) would include
\&\f(CW\*(C`OUTLIST\*(C'\fR parameters, but these aren't arguments to the perl function.
This has been rectified.
[perl #133654] <https://rt.perl.org/Ticket/Display.html?id=133654>.
.SH "Testing"
.IX Header "Testing"
Tests were added and changed to reflect the other additions and
changes in this release.  Furthermore, these significant changes were
made:
.IP "\(bu" 4
Some tests in \fIt/io/eintr.t\fR caused the process to hang on
pre\-16 Darwin. These tests are skipped for those version of Darwin.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "Cygwin" 4
.IX Item "Cygwin"
Cygwin doesn't make \f(CW\*(C`cuserid\*(C'\fR visible.
.IP "Win32 Mingw" 4
.IX Item "Win32 Mingw"
C99 math functions are now available.
.SH "Internal Changes"
.IX Header "Internal Changes"
.IP "\(bu" 4
Two new regnodes have been introduced \f(CW\*(C`EXACT_ONLY8\*(C'\fR, and
\&\f(CW\*(C`EXACTFU_ONLY8\*(C'\fR. They're equivalent to \f(CW\*(C`EXACT\*(C'\fR and \f(CW\*(C`EXACTFU\*(C'\fR,
except that they contain a code point which requires \s-1UTF\-8\s0 to
represent/match. Hence, if the target string isn't \s-1UTF\-8,\s0 we know
it can't possibly match, without needing to try.
.IP "\(bu" 4
\&\f(CW\*(C`print_bytes_for_locale()\*(C'\fR is now defined if \f(CW\*(C`DEBUGGING\*(C'\fR,
Prior, it didn't get defined unless \f(CW\*(C`LC_COLLATE\*(C'\fR was defined
on the platform.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
If an in-place edit is still in progress during global destruction and
the process exit code (as stored in \f(CW$?\fR) is zero, perl will now
treat the in-place edit as successful, replacing the input file with
any output produced.
.Sp
This allows code like:
.Sp
.Vb 1
\&  perl \-i \-ne \*(Aqprint "Foo"; last\*(Aq
.Ve
.Sp
to replace the input file, while code like:
.Sp
.Vb 1
\&  perl \-i \-ne \*(Aqprint "Foo"; die\*(Aq
.Ve
.Sp
will not.  Partly resolves
[perl #133659] <https://rt.perl.org/Ticket/Display.html?id=133659>.
.IP "\(bu" 4
A regression in 5.28 caused the following code to fail
.Sp
.Vb 1
\& close(STDIN); open(CHILD, "|wc \-l")\*(Aq
.Ve
.Sp
because the child's stdin would be closed on exec. This has now been fixed.
.IP "\(bu" 4
Fixed an issue where compiling a regexp containing both compile-time
and run-time code blocks could lead to trying to compile something
which is invalid syntax.
.IP "\(bu" 4
Fixed build failures with \f(CW\*(C`\-DNO_LOCALE_NUMERIC\*(C'\fR and
\&\f(CW\*(C`\-DNO_LOCALE_COLLATE\*(C'\fR.
[perl #133696] <https://rt.perl.org/Ticket/Display.html?id=133696>.
.IP "\(bu" 4
Prevent the tests in \fIext/B/t/strict.t\fR from being skipped.
[perl #133713] <https://rt.perl.org/Ticket/Display.html?id=133713>.
.IP "\(bu" 4
\&\f(CW\*(C`/di\*(C'\fR nodes ending or beginning in \fIs\fR are now \f(CW\*(C`EXACTF\*(C'\fR. We do not
want two \f(CW\*(C`EXACTFU\*(C'\fR to be joined together during optimization,
and to form a \f(CW\*(C`ss\*(C'\fR, \f(CW\*(C`sS\*(C'\fR, \f(CW\*(C`Ss\*(C'\fR or \f(CW\*(C`SS\*(C'\fR sequence;
they are the only multi-character sequences which may match differently
under \f(CW\*(C`/ui\*(C'\fR and \f(CW\*(C`/di\*(C'\fR.
.SH "Errata From Previous Releases"
.IX Header "Errata From Previous Releases"
.IP "\(bu" 4
The upper limit \f(CW"n"\fR specifiable in a regular expression
quantifier of the form \f(CW"{m,n}"\fR has been doubled to 65534.
.Sp
The meaning of an unbounded upper quantifier \f(CW"{m,}"\fR remains unchanged.
It matches 2**31 \- 1 times on most platforms, and more on ones where a C
language short variable is more than 4 bytes long.
.Sp
The text above is what perl5294delta should have said.  Instead it said
\&\*(L"The maximum number of times a pattern can match has been doubled to 65535\*(R"
That statement was wrong.  Try to forget you ever saw it.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.29.6 represents approximately 4 weeks of development since Perl
5.29.5 and contains approximately 5,000 lines of changes across 230 files
from 19 authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 2,600 lines of changes to 150 .pm, .t, .c and .h files.
.PP
Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.29.6:
.PP
Aaron Crane, Abigail, Dagfinn Ilmari MannsA\*~Xker, David Mitchell, Dominic
Hargreaves, E. Choroba, Eugen Konkov, H.Merijn Brand, James E Keenan, Jerry
D. Hedden, Karen Etheridge, Karl Williamson, Leon Timmermans, Niko Tyni,
Petr PA\*~\%saA\*oX, Sisyphus, Steve Hay, Tomasz Konojacki, Tony Cook.
.PP
The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of the (very much appreciated) contributors who reported issues to
the Perl bug tracker.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0 modules
included in Perl's core. We're grateful to the entire \s-1CPAN\s0 community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl's historical contributors, please
see the \fI\s-1AUTHORS\s0\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the perl bug database
at <https://rt.perl.org/>.  There may also be information at
<http://www.perl.org/>, the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the perlbug program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
\&\*(L"\s-1SECURITY VULNERABILITY CONTACT INFORMATION\*(R"\s0 in perlsec
for details of how to report the issue.
.SH "Give Thanks"
.IX Header "Give Thanks"
If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the \f(CW\*(C`perlthanks\*(C'\fR program:
.PP
.Vb 1
\&    perlthanks
.Ve
.PP
This will send an email to the Perl 5 Porters list with your show of thanks.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 1:" 4
.IX Item "Around line 1:"
This document probably does not appear as it should, because its \*(L"=encoding utf8\*(R" line calls for an unsupported encoding.  [Encode.pm v?'s supported encodings are: ]
.Sp
Couldn't do =encoding utf8: This document probably does not appear as it should, because its \*(L"=encoding utf8\*(R" line calls for an unsupported encoding.  [Encode.pm v?'s supported encodings are: ]
